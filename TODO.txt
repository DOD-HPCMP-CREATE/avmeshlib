/** @page todo

Make a stronger connection between test order to ensure both styles of writers are being tested. "DEPENDS" still leaves ambiguity where both writers can run before either of the readers. Easiest way to do this would be to just have the two writers output files with different names. Could also make a test that diffs the two files at that point. Don't run all the tests twice... jus do the diff and call it a day. Have to figure out why description is being written slightly differently first. (Extra byte for a null terminator or something?)

Remove cell neighbor connectivity info (boundary faces will track their adjacent boundary patch ID, but internal cells will no longer track their adjacent cell IDs)

Update the following unstruc metadata fields from 32-bit to 64-bit integers: nNodes, nFaces, nCells, n[Hex|Tet|Pri|Pyr]Cells, n[Bnd]TriFaces, n[Bnd]QuadFaces, n[Bnd]PolyFaces, nEdges, n[Nodes|Edges|Faces]OnGeometry
* Initially just change on disk format to 64 bit and cast up/down. Later plumb the API itself

Higher order mesh support
FIXME: what about higher order edges??
Update read_partial_faces
Update read_bnd_faces
Need better test coverage of read_tri, read_quad, read_bnd_faces, read_partial_faces, etc

Modify/extend geometry definition for AMR (this could entail the removal of the existing AMR heavy data fields)
(Looks like the existing AMR fields are OK, at least for Capstone. We could also potentially support Pointwise’s nmb format by interrogating the meshGenerator field)

Do we need to actually store mesh data on the surface in avm? This would fix some “edge” cases in AMR where you cannot determine which topology edge a mesh edge is on strictly by examining the topology edge that each mesh node is on

Jettison rev0 from repo, kestrel will use a handwritten reader to upconvert

Send Eric a detailed description of the AMR data to check that we really do have everything we need to talk to CapstoneSDK.

Steve Lamberson has a race condition (?) in the build system. See email for details (also tons of gcc warnings)

Todd's weird python-optimize bug

update rev2/test/read_avm_rev1.cpp and write_avm_rev1.cpp
*/
