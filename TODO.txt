/** @page todo

Update the following unstruc metadata fields from 32-bit to 64-bit integers: nNodes, nFaces, nCells, n[Hex|Tet|Pri|Pyr]Cells, n[Bnd]TriFaces, n[Bnd]QuadFaces, n[Bnd]PolyFaces, nEdges, n[Nodes|Edges|Faces]OnGeometry
* Initially just change on disk format to 64 bit and cast up/down. Later plumb the API itself

Higher order mesh support
FIXME: what about higher order edges??
Need better test coverage of read_tri, read_quad, etc

Partial write support

Modify/extend geometry definition for AMR (this could entail the removal of the existing AMR heavy data fields)
(Looks like the existing AMR fields are OK, at least for Capstone. We could also potentially support Pointwise’s nmb format by interrogating the meshGenerator field)

Do we need to actually store mesh data on the surface in avm? This would fix some “edge” cases in AMR where you cannot determine which topology edge a mesh edge is on strictly by examining the topology edge that each mesh node is on

Jettison rev0 from repo, kestrel will use a handwritten reader to upconvert

update rev2/test/read_avm_rev1.cpp and write_avm_rev1.cpp

Check Dave Garlisch avm_set_str invalid memory access bug (email from 7/12/2017)

String comparisons in tests aren't quite working, see commented out meshDescription/elementScheme in unstruc_read.f90 for an example.
*/
